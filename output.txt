ClassWord -> CLASS # 'class'
ClassHeader -> ClassWord IDENTIFIER # None,'HelloWorld'
Modifier -> PUBLIC # 'public'
Modifiers -> Modifier # <list @ 0x7fbd0c6b0320>
Modifier -> STATIC # 'static'
Modifiers -> Modifiers Modifier # <list @ 0x7fbd0c6b0320>,<list @ 0x7fbd0c6b03b0>
PrimitiveType -> VOID # 'void'
TypeName -> PrimitiveType # 'void'
TypeSpecifier -> TypeName # 'void'
DeclaratorName -> IDENTIFIER # 'main'
QualifiedName -> IDENTIFIER # 'String'
TypeName -> QualifiedName # <dict @ 0x7fbd0c3387f8>
TypeSpecifier -> TypeName # <dict @ 0x7fbd0c3387f8>
DeclaratorName -> IDENTIFIER # 'args'
OP_DIM -> LSQPAREN RSQPAREN # '[',']'
DeclaratorName -> DeclaratorName OP_DIM # 'args',None
Parameter -> TypeSpecifier DeclaratorName # <dict @ 0x7fbd0c3387f8>,'args'
ParameterList -> Parameter # <list @ 0x7fbd0c493518>
MethodDeclarator -> DeclaratorName LROUNPAREN ParameterList RROUNPAREN # 'main','(',<list @ 0x7fbd0c493518>,')'
PrimitiveType -> INT # 'int'
TypeName -> PrimitiveType # 'int'
TypeSpecifier -> TypeName # 'int'
DeclaratorName -> IDENTIFIER # 'a'
VariableDeclarator -> DeclaratorName # 'a'
VariableDeclarators -> VariableDeclarator # <dict @ 0x7fbd0c32fe88>
DeclaratorName -> IDENTIFIER # 'b'
VariableDeclarator -> DeclaratorName # 'b'
VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator # <dict @ 0x7fbd0c338168>,',',<dict @ 0x7fbd0c360050>
Mark_quad -> <empty> # 
LocalVariableDeclarationStatement -> TypeSpecifier VariableDeclarators SEMICOLON Mark_quad # 'int',<dict @ 0x7fbd0c32f4b0>,';',{'quad': 0}
LocalVariableDeclarationOrStatement -> LocalVariableDeclarationStatement # <dict @ 0x7fbd0c363398>
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement # <dict @ 0x7fbd0c363398>
QualifiedName -> IDENTIFIER # 'a'
PrimaryExpression -> QualifiedName # {'Name': 'a'}
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c32ca28>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c32ca28>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c32ca28>
AssignmentOperator -> EQUAL # '='
ComplexPrimaryNoParenthesis -> INT_CONST # '15'
ComplexPrimary -> ComplexPrimaryNoParenthesis # <dict @ 0x7fbd0c338168>
NotJustName -> ComplexPrimary # <dict @ 0x7fbd0c338168>
PrimaryExpression -> NotJustName # <dict @ 0x7fbd0c338168>
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c338168>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c338168>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c338168>
CastExpression -> UnaryExpression # <dict @ 0x7fbd0c338168>
MultiplicativeExpression -> CastExpression # <dict @ 0x7fbd0c338168>
AdditiveExpression -> MultiplicativeExpression # <dict @ 0x7fbd0c338168>
ShiftExpression -> AdditiveExpression # <dict @ 0x7fbd0c338168>
RelationalExpression -> ShiftExpression # <dict @ 0x7fbd0c338168>
EqualityExpression -> RelationalExpression # <dict @ 0x7fbd0c338168>
AndExpression -> EqualityExpression # <dict @ 0x7fbd0c338168>
ExclusiveOrExpression -> AndExpression # <dict @ 0x7fbd0c338168>
InclusiveOrExpression -> ExclusiveOrExpression # <dict @ 0x7fbd0c338168>
ConditionalAndExpression -> InclusiveOrExpression # <dict @ 0x7fbd0c338168>
ConditionalOrExpression -> ConditionalAndExpression # <dict @ 0x7fbd0c338168>
ConditionalExpression -> ConditionalOrExpression # <dict @ 0x7fbd0c338168>
AssignmentExpression -> ConditionalExpression # <dict @ 0x7fbd0c338168>
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression # <dict @ 0x7fbd0c32ca28>,'=',<dict @ 0x7fbd0c338168>
Expression -> AssignmentExpression # {'Name': 't_1'}
ExpressionStatement -> Expression # {'Name': 't_1'}
Mark_quad -> <empty> # 
Statement -> ExpressionStatement SEMICOLON Mark_quad # {'Name': 't_1'},';',{'quad': 2}
LocalVariableDeclarationOrStatement -> Statement # <dict @ 0x7fbd0c32c6e0>
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement # <dict @ 0x7fbd0c363398>,<dict @ 0x7fbd0c32c6e0>
Mark_quad -> <empty> # 
QualifiedName -> IDENTIFIER # 'a'
PrimaryExpression -> QualifiedName # {'Name': 'a'}
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c338168>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c338168>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c338168>
CastExpression -> UnaryExpression # <dict @ 0x7fbd0c338168>
MultiplicativeExpression -> CastExpression # <dict @ 0x7fbd0c338168>
AdditiveExpression -> MultiplicativeExpression # <dict @ 0x7fbd0c338168>
ShiftExpression -> AdditiveExpression # <dict @ 0x7fbd0c338168>
RelationalExpression -> ShiftExpression # <dict @ 0x7fbd0c338168>
ComplexPrimaryNoParenthesis -> INT_CONST # '4'
ComplexPrimary -> ComplexPrimaryNoParenthesis # <dict @ 0x7fbd0c32fe88>
NotJustName -> ComplexPrimary # <dict @ 0x7fbd0c32fe88>
PrimaryExpression -> NotJustName # <dict @ 0x7fbd0c32fe88>
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c32fe88>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c32fe88>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c32fe88>
CastExpression -> UnaryExpression # <dict @ 0x7fbd0c32fe88>
MultiplicativeExpression -> CastExpression # <dict @ 0x7fbd0c32fe88>
AdditiveExpression -> MultiplicativeExpression # <dict @ 0x7fbd0c32fe88>
ShiftExpression -> AdditiveExpression # <dict @ 0x7fbd0c32fe88>
RelationalExpression -> RelationalExpression MORE ShiftExpression # <dict @ 0x7fbd0c338168>,'>',<dict @ 0x7fbd0c32fe88>
EqualityExpression -> RelationalExpression # <dict @ 0x7fbd0c32c050>
AndExpression -> EqualityExpression # <dict @ 0x7fbd0c32c050>
ExclusiveOrExpression -> AndExpression # <dict @ 0x7fbd0c32c050>
InclusiveOrExpression -> ExclusiveOrExpression # <dict @ 0x7fbd0c32c050>
ConditionalAndExpression -> InclusiveOrExpression # <dict @ 0x7fbd0c32c050>
ConditionalOrExpression -> ConditionalAndExpression # <dict @ 0x7fbd0c32c050>
ConditionalExpression -> ConditionalOrExpression # <dict @ 0x7fbd0c32c050>
AssignmentExpression -> ConditionalExpression # <dict @ 0x7fbd0c32c050>
Expression -> AssignmentExpression # <dict @ 0x7fbd0c32c050>
Mark_while -> <empty> # 
QualifiedName -> IDENTIFIER # 'a'
PrimaryExpression -> QualifiedName # {'Name': 'a'}
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c32f7f8>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c32f7f8>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c32f7f8>
CastExpression -> UnaryExpression # <dict @ 0x7fbd0c32f7f8>
MultiplicativeExpression -> CastExpression # <dict @ 0x7fbd0c32f7f8>
AdditiveExpression -> MultiplicativeExpression # <dict @ 0x7fbd0c32f7f8>
ShiftExpression -> AdditiveExpression # <dict @ 0x7fbd0c32f7f8>
RelationalExpression -> ShiftExpression # <dict @ 0x7fbd0c32f7f8>
ComplexPrimaryNoParenthesis -> INT_CONST # '4'
ComplexPrimary -> ComplexPrimaryNoParenthesis # <dict @ 0x7fbd0c3315c8>
NotJustName -> ComplexPrimary # <dict @ 0x7fbd0c3315c8>
PrimaryExpression -> NotJustName # <dict @ 0x7fbd0c3315c8>
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c3315c8>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c3315c8>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c3315c8>
CastExpression -> UnaryExpression # <dict @ 0x7fbd0c3315c8>
MultiplicativeExpression -> CastExpression # <dict @ 0x7fbd0c3315c8>
AdditiveExpression -> MultiplicativeExpression # <dict @ 0x7fbd0c3315c8>
ShiftExpression -> AdditiveExpression # <dict @ 0x7fbd0c3315c8>
RelationalExpression -> RelationalExpression MORE ShiftExpression # <dict @ 0x7fbd0c32f7f8>,'>',<dict @ 0x7fbd0c3315c8>
EqualityExpression -> RelationalExpression # <dict @ 0x7fbd0c32e4b0>
AndExpression -> EqualityExpression # <dict @ 0x7fbd0c32e4b0>
ExclusiveOrExpression -> AndExpression # <dict @ 0x7fbd0c32e4b0>
InclusiveOrExpression -> ExclusiveOrExpression # <dict @ 0x7fbd0c32e4b0>
ConditionalAndExpression -> InclusiveOrExpression # <dict @ 0x7fbd0c32e4b0>
ConditionalOrExpression -> ConditionalAndExpression # <dict @ 0x7fbd0c32e4b0>
ConditionalExpression -> ConditionalOrExpression # <dict @ 0x7fbd0c32e4b0>
AssignmentExpression -> ConditionalExpression # <dict @ 0x7fbd0c32e4b0>
Expression -> AssignmentExpression # <dict @ 0x7fbd0c32e4b0>
Mark_if -> <empty> # 
QualifiedName -> IDENTIFIER # 'a'
PrimaryExpression -> QualifiedName # {'Name': 'a'}
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c32ee88>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c32ee88>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c32ee88>
AssignmentOperator -> EQUAL # '='
ComplexPrimaryNoParenthesis -> INT_CONST # '5'
ComplexPrimary -> ComplexPrimaryNoParenthesis # <dict @ 0x7fbd0c3315c8>
NotJustName -> ComplexPrimary # <dict @ 0x7fbd0c3315c8>
PrimaryExpression -> NotJustName # <dict @ 0x7fbd0c3315c8>
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c3315c8>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c3315c8>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c3315c8>
CastExpression -> UnaryExpression # <dict @ 0x7fbd0c3315c8>
MultiplicativeExpression -> CastExpression # <dict @ 0x7fbd0c3315c8>
AdditiveExpression -> MultiplicativeExpression # <dict @ 0x7fbd0c3315c8>
ShiftExpression -> AdditiveExpression # <dict @ 0x7fbd0c3315c8>
RelationalExpression -> ShiftExpression # <dict @ 0x7fbd0c3315c8>
EqualityExpression -> RelationalExpression # <dict @ 0x7fbd0c3315c8>
AndExpression -> EqualityExpression # <dict @ 0x7fbd0c3315c8>
ExclusiveOrExpression -> AndExpression # <dict @ 0x7fbd0c3315c8>
InclusiveOrExpression -> ExclusiveOrExpression # <dict @ 0x7fbd0c3315c8>
ConditionalAndExpression -> InclusiveOrExpression # <dict @ 0x7fbd0c3315c8>
ConditionalOrExpression -> ConditionalAndExpression # <dict @ 0x7fbd0c3315c8>
ConditionalExpression -> ConditionalOrExpression # <dict @ 0x7fbd0c3315c8>
AssignmentExpression -> ConditionalExpression # <dict @ 0x7fbd0c3315c8>
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression # <dict @ 0x7fbd0c32ee88>,'=',<dict @ 0x7fbd0c3315c8>
Expression -> AssignmentExpression # {'Name': 't_7'}
ExpressionStatement -> Expression # {'Name': 't_7'}
Mark_quad -> <empty> # 
Statement -> ExpressionStatement SEMICOLON Mark_quad # {'Name': 't_7'},';',{'quad': 10}
LocalVariableDeclarationOrStatement -> Statement # <dict @ 0x7fbd0c330910>
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement # <dict @ 0x7fbd0c330910>
Block -> LCURPAREN LocalVariableDeclarationsAndStatements RCURPAREN # '{',<dict @ 0x7fbd0c330910>,'}'
Mark_quad -> <empty> # 
Statement -> Block Mark_quad # <dict @ 0x7fbd0c330910>,{'quad': 10}
SelectionStatement -> IF LROUNPAREN Expression RROUNPAREN Mark_if Statement # 'if','(',<dict @ 0x7fbd0c32e4b0>,')',<dict @ 0x7fbd0c331280>,<dict @ 0x7fbd0c32e168>
Mark_quad -> <empty> # 
Statement -> SelectionStatement Mark_quad # <dict @ 0x7fbd0c336050>,{'quad': 10}
LocalVariableDeclarationOrStatement -> Statement # <dict @ 0x7fbd0c3366e0>
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationOrStatement # <dict @ 0x7fbd0c3366e0>
QualifiedName -> IDENTIFIER # 'a'
PrimaryExpression -> QualifiedName # {'Name': 'a'}
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c32e168>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c32e168>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c32e168>
AssignmentOperator -> EQUAL # '='
ComplexPrimaryNoParenthesis -> INT_CONST # '6'
ComplexPrimary -> ComplexPrimaryNoParenthesis # <dict @ 0x7fbd0c32fe88>
NotJustName -> ComplexPrimary # <dict @ 0x7fbd0c32fe88>
PrimaryExpression -> NotJustName # <dict @ 0x7fbd0c32fe88>
PostfixExpression -> PrimaryExpression # <dict @ 0x7fbd0c32fe88>
LogicalUnaryExpression -> PostfixExpression # <dict @ 0x7fbd0c32fe88>
UnaryExpression -> LogicalUnaryExpression # <dict @ 0x7fbd0c32fe88>
CastExpression -> UnaryExpression # <dict @ 0x7fbd0c32fe88>
MultiplicativeExpression -> CastExpression # <dict @ 0x7fbd0c32fe88>
AdditiveExpression -> MultiplicativeExpression # <dict @ 0x7fbd0c32fe88>
ShiftExpression -> AdditiveExpression # <dict @ 0x7fbd0c32fe88>
RelationalExpression -> ShiftExpression # <dict @ 0x7fbd0c32fe88>
EqualityExpression -> RelationalExpression # <dict @ 0x7fbd0c32fe88>
AndExpression -> EqualityExpression # <dict @ 0x7fbd0c32fe88>
ExclusiveOrExpression -> AndExpression # <dict @ 0x7fbd0c32fe88>
InclusiveOrExpression -> ExclusiveOrExpression # <dict @ 0x7fbd0c32fe88>
ConditionalAndExpression -> InclusiveOrExpression # <dict @ 0x7fbd0c32fe88>
ConditionalOrExpression -> ConditionalAndExpression # <dict @ 0x7fbd0c32fe88>
ConditionalExpression -> ConditionalOrExpression # <dict @ 0x7fbd0c32fe88>
AssignmentExpression -> ConditionalExpression # <dict @ 0x7fbd0c32fe88>
AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression # <dict @ 0x7fbd0c32e168>,'=',<dict @ 0x7fbd0c32fe88>
Expression -> AssignmentExpression # {'Name': 't_9'}
ExpressionStatement -> Expression # {'Name': 't_9'}
Mark_quad -> <empty> # 
Statement -> ExpressionStatement SEMICOLON Mark_quad # {'Name': 't_9'},';',{'quad': 12}
LocalVariableDeclarationOrStatement -> Statement # <dict @ 0x7fbd0c32e7f8>
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement # <dict @ 0x7fbd0c3366e0>,<dict @ 0x7fbd0c32e7f8>
Block -> LCURPAREN LocalVariableDeclarationsAndStatements RCURPAREN # '{',<dict @ 0x7fbd0c3366e0>,'}'
Mark_quad -> <empty> # 
Statement -> Block Mark_quad # <dict @ 0x7fbd0c3366e0>,{'quad': 12}
IterationStatement -> WHILE Mark_quad LROUNPAREN Expression RROUNPAREN Mark_while Statement # 'while',{'quad': 2},'(',<dict @ 0x7fbd0c32c050>,')',<dict @ 0x7fbd0c32ca28>,<dict @ 0x7fbd0c330c58>
Mark_quad -> <empty> # 
Statement -> IterationStatement Mark_quad # <dict @ 0x7fbd0c32eb40>,{'quad': 13}
LocalVariableDeclarationOrStatement -> Statement # <dict @ 0x7fbd0c330910>
LocalVariableDeclarationsAndStatements -> LocalVariableDeclarationsAndStatements LocalVariableDeclarationOrStatement # <dict @ 0x7fbd0c363398>,<dict @ 0x7fbd0c330910>
Block -> LCURPAREN LocalVariableDeclarationsAndStatements RCURPAREN # '{',<dict @ 0x7fbd0c363398>,'}'
MethodBody -> Block # <dict @ 0x7fbd0c363398>
MethodDeclaration -> Modifiers TypeSpecifier MethodDeclarator MethodBody # <list @ 0x7fbd0c6b0320>,'void',<dict @ 0x7fbd0c360a28>,<dict @ 0x7fbd0c363398>
FieldDeclaration -> MethodDeclaration # <dict @ 0x7fbd0c32eb40>
FieldDeclarationOptSemi -> FieldDeclaration # <dict @ 0x7fbd0c32eb40>
FieldDeclarations -> FieldDeclarationOptSemi # <dict @ 0x7fbd0c32eb40>
TypeDeclaration -> ClassHeader LCURPAREN FieldDeclarations RCURPAREN # <dict @ 0x7fbd0c363a28>,'{',<dict @ 0x7fbd0c32eb40>,'}'
TypeDeclarationOptSemi -> TypeDeclaration # None
TypeDeclarations -> TypeDeclarationOptSemi # None
ProgramFile -> TypeDeclarations # None
CompilationUnit -> ProgramFile # None
